#!/usr/bin/env python3
# Hey Emacs, this is -*-python-*-

from CobolSharp import *
from CobolSharp.structure import Method

import sys
import networkx as nx

def main():
    source = sys.argv[1]
    program = parse(open(source, 'rt'))
    print(program)

    formatter = PythonishFormatter(TextOutputter(sys.stdout))

    for section in program.proc_div.sections_in_order():
        print()
        print(section.name, 'section.')

        full_graph = StmtGraph.from_section(section)
#        full_graph.print_stmts()
#        nx.nx_agraph.write_dot(full_graph, '{}_full.dot'.format(section.name))

        reachable = full_graph.reachable_subgraph()
#        print_graph_stmts(reachable)
#        nx.nx_agraph.write_dot(reachable, '{}_reachable_graph.dot'.format(section.name))

        branch_join = BranchJoinGraph.from_stmt_graph(reachable)
        branch_join.print_nodes()
        nx.nx_agraph.write_dot(branch_join.graph, '{}_branch_join.dot'.format(section.name))

        dag = AcyclicBranchGraph.from_branch_graph(branch_join)
        dag.print_nodes()
        nx.nx_agraph.write_dot(dag.graph, '{}_dag.dot'.format(section.name))

        block = dag.flatten_block()
        formatter.format_method(Method(section, block))




if __name__ == '__main__':
    main()
